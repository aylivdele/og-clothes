plugins {
    id("java")
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id("org.openapi.generator") version "7.15.0"
}

group = "ru.aylivdele"
version = "1.0-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.openapitools:jackson-databind-nullable'
    implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "org.openapitools:jackson-databind-nullable:0.2.6"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "org.modelmapper:modelmapper:3.2.5"
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    implementation("jakarta.servlet:jakarta.servlet-api:6.1.0")
    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'io.projectreactor:reactor-test'
//    testImplementation 'org.springframework.security:spring-security-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
    main {
        java {
            srcDir("${buildDir}/generated/src/main/java")
        }
    }
}

openApiGenerate {
    cleanupOutput = true
    inputSpec = "${rootDir}/src/main/resources/api/openapi.yml"
    generatorName = "spring"
    outputDir = layout.buildDirectory.dir("generated").get().asFile.absolutePath
    apiPackage = "ru.aylivdele.clothes.api"
    modelPackage = "ru.aylivdele.clothes.model"
    configOptions = [
            "library": "spring-boot",
            "delegatePattern": "true",
            "useSpringBoot3": "true"
    ]
    ignoreFileOverride.set(".openapi-generator-java-sources.ignore")

}

tasks.compileJava {
    dependsOn(tasks.openApiGenerate)
}